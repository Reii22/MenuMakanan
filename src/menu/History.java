package menu;

import java.sql.*;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author ASUS
 */
public class History extends javax.swing.JFrame {

    /**
     * Creates new form History
     */
    public History() {
        initComponents();
        cariHistory();
    }
    
    public void cariHistory(){
        try {
            histroyArea.setText("");
            Connection conn = Koneksi.ConnectDB();
            String query = "SELECT * FROM tb_menu";
            Statement st = conn.createStatement();
            ResultSet rs;
            rs = st.executeQuery(query);
            String no = null;
            String tuna = null, salmon = null, callifornia = null, potato = null, crab = null, ocaTea = null, orangeJuice = null, sweetTea = null, cappucino = null;
            String tampil = "";
            int total = 0;
            while(rs.next()){
                no = rs.getString("NoMeja");
                tuna = rs.getString("SushiTunaRoll");
                salmon = rs.getString("SushiSalmonRoll");
                callifornia = rs.getString("SushiCaliforniaRoll");
                potato = rs.getNString("SweetPotatoRoll");
                crab = rs.getString("SushiCrabRoll");
                ocaTea = rs.getString("OcaTea");
                orangeJuice = rs.getString("OrangeJuice");
                sweetTea = rs.getString("SweetTea");
                cappucino = rs.getString("Cappucino");
             
                tampil += "No meja: " + no + "\n";
                if(tuna.length() > 4){
                     String[] n = tuna.split("=");
                     total += Integer.parseInt(n[1]) * 30000;
                     tampil += n[0] + " x"+ n[1] + "\n";
                }
                if(salmon.length() > 4){
                    String[] s = salmon.split("=");
                    total += Integer.parseInt(s[1]) * 30000;
                    tampil += s[0] + " x"+ s[1] + "\n";
                }
                if(callifornia.length() > 4){
                   String[] c = callifornia.split("=");
                   total += Integer.parseInt(c[1]) * 25000;
                   tampil += c[0] + " x" + c[1] + "\n";
                }
                if(potato.length() > 4){
                     String[] n = potato.split("=");
                     total += Integer.parseInt(n[1]) * 20000;
                    tampil += n[0] + " x"+ n[1] + "\n";
                }
                if(crab.length() > 4){
                    String[] s = crab.split("=");
                    total += Integer.parseInt(s[1]) * 25000;
                    tampil +=s[0] + " x"+ s[1] + "\n";
                }
                if(ocaTea.length() > 4){
                   String[] c = ocaTea.split("=");
                   total += Integer.parseInt(c[1]) * 8000;
                   tampil += c[0] + " x" + c[1] + "\n";
                }
                if(orangeJuice.length() > 4){
                     String[] n = orangeJuice.split("=");
                     total += Integer.parseInt(n[1]) * 12000;
                    tampil += n[0] + " x"+ n[1] + "\n";
                }
                if(sweetTea.length() > 4){
                    String[] s = sweetTea.split("=");
                    total += Integer.parseInt(s[1]) * 10000;
                    tampil += s[0] + " x"+ s[1] + "\n";
                }
                if(cappucino .length() > 4){
                   String[] c = cappucino.split("=");
                   total += Integer.parseInt(c[1]) * 15000;
                   tampil += c[0] + " x" + c[1] + "\n";
                }
                tampil += "Total harga: "+ total +"\n\n";
                total = 0;
            }
            histroyArea.append(tampil);
            st.close();
           
          
           
        } catch (SQLException ex) {
            Logger.getLogger(History.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        histroyArea = new javax.swing.JTextArea();
        btncari = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        noMeja = new javax.swing.JTextField();
        btnback = new javax.swing.JButton();
        history = new javax.swing.JButton();
        Hapus = new javax.swing.JButton();

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 204, 0));

        histroyArea.setColumns(20);
        histroyArea.setRows(5);
        jScrollPane1.setViewportView(histroyArea);

        btncari.setText("Cari");
        btncari.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btncariMouseClicked(evt);
            }
        });

        jLabel1.setText("No Meja :");

        btnback.setText("Back");
        btnback.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnbackMouseClicked(evt);
            }
        });

        history.setText("Riwayat");
        history.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                historyMouseClicked(evt);
            }
        });

        Hapus.setText("Hapus");
        Hapus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HapusMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(217, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(noMeja, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btncari)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(history)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Hapus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnback))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(163, 163, 163))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(noMeja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btncari)
                    .addComponent(btnback)
                    .addComponent(history)
                    .addComponent(Hapus))
                .addContainerGap(115, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void HapusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HapusMouseClicked
        // TODO add your handling code here:
        String no = noMeja.getText();
        if(no == null || no.isBlank() || no.isEmpty()){
            JOptionPane.showMessageDialog(null, "No meja wajib diisi", "Invalid", JOptionPane.ERROR_MESSAGE);
        }else{
            try{
                histroyArea.setText("");
                Connection conn = Koneksi.ConnectDB();
                String delete = "DELETE FROM `tb_menu` WHERE NoMeja='"+ no +"'";
                PreparedStatement prs = conn.prepareStatement(delete);
                prs.execute();
                cariHistory();
            }catch (SQLException ex) {
                Logger.getLogger(History.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_HapusMouseClicked

    private void historyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_historyMouseClicked
        // TODO add your handling code here:
        cariHistory();
    }//GEN-LAST:event_historyMouseClicked

    private void btnbackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnbackMouseClicked
        // TODO add your handling code here:
        MenuMakanan m = new MenuMakanan();
        this.setVisible(false);
        m.setVisible(true);
    }//GEN-LAST:event_btnbackMouseClicked

    private void btncariMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btncariMouseClicked
        // TODO add your handling code here:

        String no = noMeja.getText();
        if(no == null || no.isBlank() || no.isEmpty()){
            JOptionPane.showMessageDialog(null, "No meja wajib diisi", "Invalid", JOptionPane.ERROR_MESSAGE);
        }else{
            try{
                histroyArea.setText("");
                Connection conn = Koneksi.ConnectDB();
                String query = "SELECT * FROM tb_menu where NoMeja='"+no+"'";
                Statement st = conn.createStatement();
                ResultSet rs;
                rs = st.executeQuery(query);
                String tuna = null, salmon = null, callifornia = null, potato = null, crab = null, ocaTea = null, orangeJuice = null, sweetTea = null, cappucino = null;
                String tampil = "";
                int total = 0;
                while(rs.next()){
                    no = rs.getString("NoMeja");
                    tuna = rs.getString("SushiTunaRoll");
                    salmon = rs.getString("SushiSalmonRoll");
                    callifornia = rs.getString("SushiCaliforniaRoll");
                    potato = rs.getNString("SweetPotatoRoll");
                    crab = rs.getString("SushiCrabRoll");
                    ocaTea = rs.getString("OcaTea");
                    orangeJuice = rs.getString("OrangeJuice");
                    sweetTea = rs.getString("SweetTea");
                    cappucino = rs.getString("Cappucino");

                    tampil += "No meja: " + no + "\n";
                    if(tuna.length() > 4){
                        String[] n = tuna.split("=");
                        total += Integer.parseInt(n[1]) * 30000;
                        tampil += n[0] + " x"+ n[1] + "\n";
                    }
                    if(salmon.length() > 4){
                        String[] s = salmon.split("=");
                        total += Integer.parseInt(s[1]) * 30000;
                        tampil += s[0] + " x"+ s[1] + "\n";
                    }
                    if(callifornia.length() > 4){
                        String[] c = callifornia.split("=");
                        total += Integer.parseInt(c[1]) * 25000;
                        tampil += c[0] + " x" + c[1] + "\n";
                    }
                    if(potato.length() > 4){
                        String[] n = potato.split("=");
                        total += Integer.parseInt(n[1]) * 20000;
                        tampil += n[0] + " x"+ n[1] + "\n";
                    }
                    if(crab.length() > 4){
                        String[] s = crab.split("=");
                        total += Integer.parseInt(s[1]) * 25000;
                        tampil +=s[0] + " x"+ s[1] + "\n";
                    }
                    if(ocaTea.length() > 4){
                        String[] c = ocaTea.split("=");
                        total += Integer.parseInt(c[1]) * 8000;
                        tampil += c[0] + " x" + c[1] + "\n";
                    }
                    if(orangeJuice.length() > 4){
                        String[] n = orangeJuice.split("=");
                        total += Integer.parseInt(n[1]) * 12000;
                        tampil += n[0] + " x"+ n[1] + "\n";
                    }
                    if(sweetTea.length() > 4){
                        String[] s = sweetTea.split("=");
                        total += Integer.parseInt(s[1]) * 10000;
                        tampil += s[0] + " x"+ s[1] + "\n";
                    }
                    if(cappucino .length() > 4){
                        String[] c = cappucino.split("=");
                        total += Integer.parseInt(c[1]) * 15000;
                        tampil += c[0] + " x" + c[1] + "\n";
                    }
                    tampil += "Total harga: "+ total +"\n\n";
                }
                histroyArea.append(tampil);
                st.close();
            }catch (SQLException ex) {
                Logger.getLogger(History.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btncariMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(History.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(History.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(History.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(History.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new History().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Hapus;
    private javax.swing.JButton btnback;
    private javax.swing.JButton btncari;
    private javax.swing.JButton history;
    private javax.swing.JTextArea histroyArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField noMeja;
    // End of variables declaration//GEN-END:variables
}
